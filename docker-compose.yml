services:
  # Ambiente do Laboratorio
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - ./conf_files/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: unless-stopped
    healthcheck:
      test: "rabbitmq-diagnostics check_port_connectivity --formatter json | tail -1 | grep -q '\"result\":\"ok\"'"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
  
  redis:
    image: redis/redis-stack
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379 
      - 8001:8001
    environment:
      REDIS_ARGS: --save 60 1000 --appendonly yes
      REDISTIMESERIES_ARGS: "RETENTION_POLICY=20"
    healthcheck:
      test: "redis-cli ping | grep -q PONG"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    ports:
      - 9000:9000
      - 9001:9001
    # MinIO Ã© chato e precisa das senhas definidas em variavel de ambiente.
    env_file:
      - ./env_files/minio.env
    command: server /data --console-address ":9001"
    secrets:
      - usuario
      - senha
    healthcheck:
      test: 'mc alias set myminio http://localhost:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"; mc ping --exit --quiet myminio > /dev/null'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Containers com os programas auxiliares
  base_scripts:
    image: projeto_ada:latest
    container_name: base_scripts
    volumes:
      - ./scripts/rabbitmq_connection.py:/scripts/rabbitmq_connection.py
      - ./scripts/minio_connection.py:/scripts/minio_connection.py
      - ./scripts/vazio.py:/scripts/app.py
    environment:
      PYTHONUNBUFFERED: 1
    entrypoint: python /scripts/app.py
    secrets:
      - usuario
      - senha

  criar_contas_redis:
    extends: base_scripts
    container_name: criar_contas_redis
    volumes:
      - ./scripts/criar_contas_redis.py:/scripts/app.py 
    depends_on:
      redis:
        condition: service_healthy

  criar_ambiente_rabbitmq:
    extends: base_scripts
    container_name: criar_ambiente_rabbitmq
    volumes:
      - ./scripts/criar_ambiente_rabbitmq.py:/scripts/app.py
    depends_on:
      rabbitmq:
        condition: service_healthy
      criar_contas_redis:
        condition: service_completed_successfully

  producer_transacoes:
    extends: base_scripts
    container_name: producer_transacoes
    volumes:
      - ./scripts/producer_transacoes.py:/scripts/app.py
    depends_on:
      - criar_ambiente_rabbitmq

  criar_ambiente_minio:
    extends: base_scripts
    container_name: criar_ambiente_minio
    volumes:
      - ./scripts/criar_ambiente_minio.py:/scripts/app.py
    depends_on:
      minio:
        condition: service_healthy

  consumer_transacoes:
    extends: base_scripts
    container_name: consumer_transacoes
    volumes:
      - ./scripts/consumer-transacoes.py:/scripts/app.py
    depends_on:
      - criar_ambiente_rabbitmq
      - criar_ambiente_minio

secrets:
  usuario:
    file: ./secrets/usuario_padrao.txt
  senha:
    file: ./secrets/senha_padrao.txt